defaults: &defaults
  machine: true
  environment:
    GRUNTWORK_INSTALLER_VERSION: v0.0.21
    MODULE_CI_VERSION: v0.13.12
    TERRAFORM_VERSION: NONE
    TERRAGRUNT_VERSION: NONE
    PACKER_VERSION: NONE
    GOLANG_VERSION: 1.11.2

version: 2
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run: &install_gruntwork_tooling
          name: install dependencies
          command: |
            # Install the gruntwork-module-circleci-helpers and use it to configure the build environment and run tests.
            curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
            gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "${MODULE_CI_VERSION}"
            configure-environment-for-gruntwork-module \
              --circle-ci-2-machine-executor \
              --terraform-version ${TERRAFORM_VERSION} \
              --terragrunt-version ${TERRAGRUNT_VERSION} \
              --packer-version ${PACKER_VERSION} \
              --use-go-dep \
              --go-version ${GOLANG_VERSION} \
              --go-src-path ./
      - run:
          name: run tests
          command: run-go-tests --path . --timeout 1h
          no_output_timeout: 3600s
  deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          <<: *install_gruntwork_tooling

      - run: go get github.com/mitchellh/gox

      - run:
          name: release assets
          command: |
            cd ~/.go_workspace/src/github.com/gruntwork-io/boilerplate

            # If a new release is tagged in GitHub, build the binaries and upload them to GitHub.
            build-go-binaries \
              --circle-ci-2 \
              --app-name boilerplate \
              --dest-path bin \
              --ld-flags "-X main.VERSION=$CIRCLE_TAG"

            upload-github-release-assets bin/*
      - run:
          name: generate documentation
          command: |
            # Generate the latest README it in the root folder and commit it to master
            git checkout master
            bin/boilerplate_linux_amd64 --template-folder _docs --output-folder . --non-interactive --var Version=$CIRCLE_TAG
            git-add-commit-push --path README.md --message "Automatically regenerate README for version $CIRCLE_TAG" --branch-name master --git-push-behavior current

workflows:
  version: 2
  build-and-test:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
